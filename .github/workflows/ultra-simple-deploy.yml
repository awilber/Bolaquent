name: Ultra Simple Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to AWS via SSH
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        
        ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@54.161.222.239 << 'DEPLOY_END'
        
        # Clean processes
        pkill -f "bolaquent" || true
        pkill -f "python.*app.py" || true
        sleep 3
        
        # Clean files
        rm -rf bolaquent-app-old
        [ -d "bolaquent-app" ] && mv bolaquent-app bolaquent-app-old
        
        # Fresh clone
        git clone https://github.com/awilber/Bolaquent.git bolaquent-app
        cd bolaquent-app
        
        # Python setup
        python3 -m venv venv
        source venv/bin/activate
        pip install -r requirements-prod.txt
        
        # Find port
        ALLOCATED_PORT=5010
        for i in {0..10}; do
          PORT=$((5010 + i * 10))
          if ! lsof -i:$PORT > /dev/null 2>&1; then
            ALLOCATED_PORT=$PORT
            break
          fi
        done
        
        # Start Flask
        export PORT=$ALLOCATED_PORT
        export FLASK_ENV=production
        export FLASK_HOST=0.0.0.0
        nohup python app.py > app.log 2>&1 &
        echo $! > app.pid
        
        # Wait and test
        sleep 10
        curl -f http://localhost:$ALLOCATED_PORT/ || exit 1
        
        # Verify static files exist and debug nginx issues
        echo "🔍 Verifying static files structure..."
        ls -la static/ || exit 1
        ls -la static/css/ || exit 1
        echo "📁 Full static directory structure:"
        find static/ -type f | head -10
        echo "📄 Sample CSS file content check:"
        head -3 static/css/themes.css || echo "⚠️ CSS file not readable"
        echo "Static files verified."
        
        # Set correct permissions for static files
        chmod -R 755 static/
        
        # Configure nginx with proper static file handling
        sudo tee /etc/nginx/sites-available/default > /dev/null << 'NGINX_END'
        server {
            listen 80 default_server;
            server_name _;
            
            # Set root directory for the application
            root /home/ec2-user/bolaquent-app;
            
            # Static files with root + location pattern (more reliable than alias)
            location /static/ {
                # Files will be served from /home/ec2-user/bolaquent-app/static/
                try_files $uri $uri/ =404;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Content-Type-Options nosniff;
                access_log off;
            }
            
            # Application proxy
            location / {
                proxy_pass http://127.0.0.1:ALLOCATED_PORT_PLACEHOLDER;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeout settings
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }
        }
        NGINX_END
        
        # Replace port in nginx config
        sudo sed -i "s/ALLOCATED_PORT_PLACEHOLDER/$ALLOCATED_PORT/g" /etc/nginx/sites-available/default
        
        # Test nginx config before applying
        sudo nginx -t || exit 1
        
        # Restart nginx
        sudo systemctl reload nginx
        
        # Verify static file serving - test external access, not localhost
        sleep 3
        echo "🔍 Testing static file serving externally..."
        curl -I http://54.161.222.239/static/css/themes.css && echo "✅ Static files accessible externally" || echo "⚠️ Static file serving failed"
        
        echo "Deploy complete: http://54.161.222.239/"
        
        DEPLOY_END
        
        rm private_key.pem
        
    - name: Post-Deployment Verification
      run: |
        echo "Verifying deployment..."
        sleep 5
        
        # Test main application
        curl -f http://54.161.222.239/ || exit 1
        echo "✅ Application accessible"
        
        # Test static files specifically
        curl -f http://54.161.222.239/static/css/themes.css || exit 1
        echo "✅ CSS files accessible"
        
        curl -f http://54.161.222.239/static/css/dashboard.css || exit 1 
        echo "✅ Dashboard CSS accessible"
        
        # Test contrast panel functionality (look for backdrop-filter)
        curl -s http://54.161.222.239/static/css/themes.css | grep "backdrop-filter" || exit 1
        echo "✅ Text readability CSS present"
        
        echo "🎉 Deployment verification complete!"